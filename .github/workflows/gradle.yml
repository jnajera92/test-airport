name: Gradle Build and Merge Check

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Configura el repositorio
    - name: Check out code
      uses: actions/checkout@v3

    # Configura Java y Gradle
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '21' # Cambia según tu versión de Java
        distribution: 'temurin'
        cache: 'gradle'


  # Inspección inicial para depuración
    - name: List Gradle Cache Directory (Before Cache)
      run: ls -R ~/.gradle/caches || echo "No Gradle cache directory found"

    # Cache de Gradle
    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches/modules-2
          ~/.gradle/caches/jars-8
        key: Linux-gradle-${{ hashFiles('gradle-wrapper.properties') }}
        restore-keys: |
          Linux-gradle-
          Linux-
      
    # Limpieza de archivos temporales no reutilizables
    - name: Clean up Gradle caches
      run: |
        rm -rf ~/.gradle/caches/tmp
        rm -rf ~/.gradle/caches/gradle-updates

    # Inspección para depuración posterior
    - name: List Gradle Cache Directory (After Cache)
      run: ls -R ~/.gradle/caches || echo "No Gradle cache directory found"



    # Compila el código con Gradle
    - name: Build with Gradle
      run: ./gradlew build

  # Validar conflictos de merge
  merge-check:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Validate merge conflicts
      run: |
        git fetch --no-tags --prune --depth=1 origin main
        git merge --no-commit --no-ff origin/main || echo "Conflict with main branch!"
        git merge --no-commit --no-ff origin/develop || echo "Conflict with develop branch!"
